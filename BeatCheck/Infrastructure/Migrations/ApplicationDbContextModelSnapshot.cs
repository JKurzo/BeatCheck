// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Core.HealtCheckAggregate.CheckType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CheckTypeDiscriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HealthCheckSuiteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HealthCheckSuiteId");

                    b.ToTable("HealthCheckDefinitions");

                    b.HasDiscriminator<string>("CheckTypeDiscriminator").HasValue("CheckType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Core.HealtCheckAggregate.HealthCheckSuite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HealthCheckSuiteDiscriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("HealthCheckSuites");

                    b.HasDiscriminator<string>("HealthCheckSuiteDiscriminator").HasValue("HealthCheckSuite");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Application.HealthCheck.EndPoint.EndPointCheckType", b =>
                {
                    b.HasBaseType("Core.HealtCheckAggregate.CheckType");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("EndPoint");
                });

            modelBuilder.Entity("Application.HealthCheck.ApiHealthCheckSuite", b =>
                {
                    b.HasBaseType("Core.HealtCheckAggregate.HealthCheckSuite");

                    b.HasDiscriminator().HasValue("API");
                });

            modelBuilder.Entity("Core.HealtCheckAggregate.CheckType", b =>
                {
                    b.HasOne("Core.HealtCheckAggregate.HealthCheckSuite", null)
                        .WithMany("Checks")
                        .HasForeignKey("HealthCheckSuiteId");
                });

            modelBuilder.Entity("Core.HealtCheckAggregate.HealthCheckSuite", b =>
                {
                    b.Navigation("Checks");
                });
#pragma warning restore 612, 618
        }
    }
}
